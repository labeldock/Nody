/*
	sass style kit
	auther        : hojugn ahn (https://github.com/labeldock/Nody_SASS)
	version       : 1.0
	concept       : easy hack, easy animation, interface set
*/

$global-primary-color:#8e9fb1;
$global-positive-color:#87d083;
$global-negative-color:#d37474;



// 기본 컴포넌트의 모양을 제거합니다.
@mixin no-appearance(){
	-webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    -o-appearance: none;
    appearance: none;
	&::-ms-expand{
	  display:none;
	}
}
@mixin margin-padding($margin:0px,$padding:0px){
	margin:$margin;
	padding:$padding;
}
@mixin width-height($width:false,$height:false) {
	@if $width != false  { width:$width; }
	@if $height != false { height:$height; }
}
@mixin block($align:left, $width:false, $height:false){
	display:block;
	@if $align == left {
		margin-left:0;
		margin-right:auto;
	}
	@if $align == right {
		margin-left:auto;
		margin-right:0;
	}
	@if $align == center {
		margin-left:auto;
		margin-right:auto;
	}
	@include width-height($width,$height);
}
@mixin inline-block{display:inline;zoom:1;display:inline-block;}
@mixin ellipsis {
	white-space: nowrap;
	text-overflow: ellipsis;
	-o-text-overflow: ellipsis;
	-ms-text-overflow: ellipsis;
	overflow: hidden;
	word-wrap:normal !important;
}
@mixin multiline {
	white-space: normal !important;
	text-overflow: clip !important;
	-o-text-overflow: clip !important;
	-ms-text-overflow: clip !important;
	overflow: visible !important;
	word-wrap:normal !important;
}
@mixin no-select() {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}
@mixin transform ($value){
	-webkit-transform:$value;
	-moz-transform:$value;
	-ms-transform:$value;
	-o-transform:$value;
	transform:$value;
}
/* animation */
@mixin transition ($range:all,$sec:0.3s,$timing-function:ease-in-out){
	-webkit-transition:$range $sec;
    -moz-transition:$range $sec;
	-ms-transition:$range $sec;
    -o-transition:$range $sec;
	transition:$range $sec;
	-webkit-transition-timing-function:$timing-function;
	-moz-transition-timing-function:$timing-function;
	-ms-transition-timing-function:$timing-function;
	-o-transition-timing-function:$timing-function;
	transition-timing-function:$timing-function;
}
//webkit-filter
@mixin -webkit-filter($value:none) { -webkit-filter: $value;filter: $value; }
// 뿌옅게 0 ~ *
@mixin -webkit-filter-blur($px){ -webkit-filter: blur($px);filter: blur($px); }
//밝기 0 ~ 10
@mixin -webkit-filter-brightness($float){ -webkit-filter: brightness($float);filter: brightness($float); }
//생기 0 ~ 10
@mixin -webkit-filter-saturate($float){	-webkit-filter: saturate($float);filter: saturate($float); }
//음영 0 ~ 1
@mixin -webkit-filter-grayscale($float){ -webkit-filter: grayscale($float);filter: grayscale($float); }
//날카롭게 0 ~ 10
@mixin -webkit-filter-contrast($float){ -webkit-filter: contrast($float);filter: contrast($float); }
//투명도 0 ~ 360
@mixin -webkit-filter-hue-rotate($float){ -webkit-filter: hue-rotate($float);filter: hue-rotate($float); }
//고전적 0 ~ 1
@mixin -webkit-filter-sepia($float){ -webkit-filter: sepia($float);filter: sepia($float); }
//반전 0 ~ 1
@mixin -webkit-filter-invert($float){ -webkit-filter: invert($float);filter: invert($float); }

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
@mixin text-hide() {
    font: #{0/0} a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}
@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: #{alpha(opacity=$opacity-ie)};
}
@mixin resizable($direction) {
  resize: $direction; // Options: horizontal, vertical, both
  overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
}
// 텍스트 스타일입니다.
@mixin text-flag-veriant(){
	&.primary{ color:$global-primary-color; }
	&.positive{ color:$global-positive-color; }
	&.negative{ color:$global-negative-color; }
}
@mixin border-flag-veriant(){
	&.primary{ border:1px solid $global-primary-color; }
	&.positive{ border:1px solid $global-positive-color; }
	&.negative{ border:1px solid $global-negative-color; }
}
@mixin background-flag-veriant(){
	&.primary { background:$global-primary-color;color:white;  }
	&.positive{ background:$global-positive-color;color:white; }
	&.negative{ background:$global-negative-color;color:white; }
}
// 인풋을 이미지화 시킵니다.
@mixin imaged-input-veriant($image,$width,$height,$checked-image:false){
	@include no-appearance;
	width:$width;
	height:$height;
	background-image:url($image);
	vertical-align:top;
	@if $checked-image != false {
		&:checked {
			background-image:url($checked-image);
		}
	}
}
@mixin show-toggle-veriant($show-class:".show",$display:block){
	@if $display == inline-block {
		&#{$show-class}  { @include inline-block; }
	} @else {
		&#{$show-class}  { display:$display; }
	}
	
}
@mixin input-text-veriant($width:100%,$height:30px,$font-size:12px,$default-padding-width:3px) {
	@include inline-block;
	border:0;
	width:$width;
	height:$height;
	font-size:$font-size;
	line-height:$font-size;
	padding:(($height - $font-size) / 2) $default-padding-width;
	margin:0;
}
//
@mixin button-veriant($width,$height,$display){
	@include no-select;
	@if $display {
		@include inline-block;
	} @else {
		display:$display;
	}
	@if $width  { width:$width; }
	@if $height { height:$height; line-height:$height; }
	
	padding-top:0;
	padding-bottom:0;
	cursor:pointer;
	border:0px solid white;
	text-align:center;
	&:hover{ text-decoration:none; };
}
// menu나 ul 안에서
@mixin menu-veriant($menu-text-align:center,$menu-item-align:false,$menu-width:false,$menu-height:false) {
	@include no-select;
	@include inline-block;
	text-align:$menu-text-align;
	margin-left:0px;
	margin-top:0px;
	padding:0px;
	margin:0px;
	> a, > a:hover { 
		@if $menu-item-align == block {
			@include block($menu-text-align);
		} @else {
			@include inline-block;
		}
		@include width-height($menu-width,$menu-height);
		text-decoration:inherit;cursor:pointer; 
		>li { list-style:none; } 
	}
	> li {
		@if $menu-item-align == inline-block {
			@include inline-block;
		} @elseif $menu-item-align == inline {
			@include inline-block;
		} @else {
			@include block($menu-text-align);
		}
		@include width-height($menu-width,$menu-height);
		list-style:none; cursor:pointer; 
		> a, > a:hover{ color:inherit;text-decoration:inherit; }
	}
}
//table 안에서
@mixin table-veriant($spacing,$border) {
	table-layout:fixed;
	width:100%;
	@if $spacing {
		border-spacing:$spacing;
		border-collapse:separate;
	} @else {
		border-spacing:0px;
		border-collapse:collapse;
	}
	@if $border {
		border:$border;
	}
}
//td, th안에서
@mixin table-cell-veriant ($vertical,$align,$height,$padding,$hBorder,$vBorder,$hBorderTop,$hBorderBottom){
	@if $vertical{ vertical-align:$vertical } @else {vertical-align:middle;}
	@if $align   { align:$align; } @else {align:left;}
	@if $height  { height:$height; }
	@if $padding { padding:$padding; }
	@if $hBorder { 
		border-top:$hBorder;
		border-bottom:$hBorder;
	}
	@if $hBorder { 
		border-left:$hBorder;
		border-right:$hBorder;
	}
	
}
//thead tbody tfoot 안에서
@mixin table-body-cell-veriant($vertical,$align,$height,$padding,$hBorder,$vBorder,$hBorderTop,$hBorderBottom){
	td,th{
		@include table-cell-veriant($vertical,$align,$height,$padding,$hBorder,$vBorder,$hBorderTop,$hBorderBottom);
	}
}

// Single side border-radius
@mixin border-radius-top($radius) {
  border-top-right-radius: $radius;
   border-top-left-radius: $radius;
}
@mixin border-radius-right($radius) {
  border-bottom-right-radius: $radius;
     border-top-right-radius: $radius;
}
@mixin border-radius-bottom($radius) {
  border-bottom-right-radius: $radius;
   border-bottom-left-radius: $radius;
}
@mixin border-radius-left($radius) {
  border-bottom-left-radius: $radius;
     border-top-left-radius: $radius;
}

/* layout set */
@mixin baseline-veriant($group-height:30px,$child-tag:'>*'){
	display:table;
    width: 100%;
	border-collapse: separate;
    table-layout: fixed;
	height:$group-height;
	#{$child-tag} {
		@include no-select;
		position:relative;
		float:none;
		display:table-cell;
		width:100%;
		height:$group-height;
		line-height:$group-height;
	}
}

@mixin layout-container-veriant($child:'undefined') {
	position:relative;
	width:100%;
	//overflow:hidden;
	&:after { content:"";display:table;clear:both; }
	@if $child == 'expend' {
		&-center{ 
			@include inline-block;margin-left:auto !important;margin-right:auto !important;text-align:center; 
			>* { vertical-align:middle; }
		}
		&-left   {
			@include inline-block;float:left;
			>* { vertical-align:middle; }
		}
		&-right  { 
			@include inline-block;float:right;
			>* { vertical-align:middle; }
		}
		&-top    { &-left, &-right { vertical-align:top; } }
		&-middle { &-left, &-right { vertical-align:middle; } }
		&-bottom { &-left, &-right { vertical-align:bottom; } }
	}
}

@mixin panelPart($model,$headname,$headHeight){
	.#{$model}-#{$headname} {
		* { margin-bottom:0; }
		position:relative;
		@if($headHeight!=''){ height:#{$headHeight};line-height:#{$headHeight};}
		.#{$model}-#{$headname}-title,.#{$model}-#{$headname}-left{
			float:left;
			@if($headHeight!=''){ height:#{$headHeight};line-height:#{$headHeight};}
			i {margin-right:3px;img {vertical-align:baseline;}}
			
		}
		.#{$model}-#{$headname}-commands,.#{$model}-#{$headname}-right{
			@include no-select;
			float:right;
			@if($headHeight!=''){ height:#{$headHeight};line-height:#{$headHeight};}
			>*  { @include inline-block; position:relative; }
			p   { cursor:default; margin:0; }
			li,a{ cursor:pointer; text-decoration:none; }
			i   {margin-right:3px;img {vertical-align:baseline;}}
		}
		&:after {
		   content: " ";
		   display: block; 
		   height: 0; 
		   clear: both;
		}
		width:100%;
	}
}
@mixin panel-veriant($model,$sel,$headHeight:'',$footHeight:'') {
	#{$sel} {
		@each $headname in 'header','heading' { @include panelPart($model,$headname,$headHeight); }
		@each $footname in 'foot','footer'    { @include panelPart($model,$footname,$footHeight); }
		.#{$model}-body { position:relative; }
	}
}


