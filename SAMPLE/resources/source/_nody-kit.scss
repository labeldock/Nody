/* include Nody SASS Kit : version 2.0 Build (alpha 115) */ 
// auther : hojugn ahn (https://github.com/labeldock/Nody_SASS)
// easy hack, mordern styleing

$global-primary-color:#8e9fb1;
$global-positive-color:#87d083;
$global-negative-color:#d37474;

@mixin css3v($name,$value,$fallback:false){
	@if $fallback { #{$name}:#{$fallback}; }
	#{$name} : #{"-webkit-"}$value;
    #{$name} : #{"-moz-"}$value;
    #{$name} : #{"-ms-"}$value;
    #{$name} : #{"-o-"}$value;
	#{$name} : $value;
}
@mixin css3f($name,$value){
	-webkit-#{$name} : $value;
    -moz-#{$name}    : $value;
    -ms-#{$name}     : $value;
    -o-#{$name}      : $value;
	#{$name}         : $value;
}
// 기본 컴포넌트의 모양을 제거합니다.
@mixin no-appearance(){
	@include css3f(appearance,none);
	&::-ms-expand { display:none; }
}
@mixin calc-plus($prop,$value:0px,$fallback:false){
	@include css3v($prop,calc(100%  + #{$value}),$fallback);
}
@mixin calc-minus($prop,$value:0px,$fallback:false){
	@include css3v($prop,calc(100%  - #{$value}),$fallback);
}
@mixin scrollY($overflow:auto) {
	@if $overflow == auto or $overflow == scroll{
		overflow-y:$overflow;
		-webkit-overflow-scrolling-y: touch;
		overflow-scrolling-y:touch;
	} @else {
		overflow-y:$overflow;
		-webkit-overflow-scrolling-y: none; 
		overflow-scrolling-y:none;
	}
}
@mixin scrollX($overflow:auto) {
	@if $overflow == auto or $overflow == scroll{
		overflow-x:$overflow;
		-webkit-overflow-scrolling-x: touch;
		overflow-scrolling-x:touch;
	} @else {
		overflow-x:$overflow;
		-webkit-overflow-scrolling-x: none; 
		overflow-scrolling-x:none;
	}
}
@mixin scroll($x:auto,$y:auto) {
	@include scrollX($x);
	@include scrollY($y);
}
@mixin margin-padding($margin:0px,$padding:0px){
	margin:$margin;
	padding:$padding;
}
@mixin width-height($width:false,$height:false) {
	@if $width != false  { width:$width; }
	@if $height != false { height:$height; }
}
@mixin pt-size($photoshop-pt:0, $origin:72){
	font-size:(($photoshop-pt / $origin) * 96)px;
}
@mixin block($align:left, $width:false, $height:false){
	display:block;
	@if $align == left {
		margin-left:0;
		margin-right:auto;
	}
	@if $align == right {
		margin-left:auto;
		margin-right:0;
	}
	@if $align == center {
		margin-left:auto;
		margin-right:auto;
	}
	@include width-height($width,$height);
}
@mixin sticky(){
	@include css3v(position,sticky);
}
@mixin block-align($block-align:left, $width:auto, $text-align:left, $font-size:false){
	@if $block-align == left {
		margin-left:0;
		margin-right:auto;
	}
	@if $block-align == right {
		margin-left:auto;
		margin-right:0;
	}
	@if $block-align == center {
		margin-left:auto;
		margin-right:auto;
	} 
	@if $block-align == middle {
		vertical-align:middle;
	} 
	@if $block-align == top {
		vertical-align:top;
	} 
	@if $block-align == bottom {
		vertical-align:bottom;
	} 
	@if $block-align == baseline {
		vertical-align:baseline;
	}
	@if $width {
		width:$width;
	}
	@if $text-align { text-align:$text-align; }
	@if $font-size  { font-size:$font-size; }
}

@mixin nowrap($ellipsis:false) {
	white-space: nowrap;
	word-wrap:normal;
	@if($ellipsis == true) {
		text-overflow: ellipsis;
		-o-text-overflow: ellipsis;
		-ms-text-overflow: ellipsis;
		overflow: hidden;
	}
}
@mixin line-clamp($numLines : 1, $lineHeight: 1.412) {
	overflow: hidden;
	text-overflow: -o-ellipsis-lastline;
	text-overflow: ellipsis;
	display: block;
	/* autoprefixer: off */
	display: -webkit-box;
	-webkit-line-clamp: $numLines;
	-webkit-box-orient: vertical;
	max-height: $numLines * $lineHeight + unquote('em');
}
@mixin wrap {
	white-space: normal;
	word-wrap:normal;
}
@mixin inline-block($vertical-align:false,$nowrap:false){
	display:inline;zoom:1;display:inline-block; 
	@if $vertical-align { vertical-align:$vertical-align; }
	@if $nowrap == "nowrap" { @include nowrap; } 
}
@mixin display($display:block,$align:false,$width:false,$height:false){
	@if $display == inline {
		display:inline;
	} @else if $display == inline-block {
		@include inline-block;
	} @else {
		display:$display;
	}
	@include block-align($align);
	@include width-height($width,$height);
}
@mixin inlinefix($childFontSize){
	font-size:0px;
	> * {
		font-size:$childFontSize;
	}
}
@mixin heightfix(){
	&:after {
	   content: " ";
	   display: table; 
	   height:0; 
	   clear:both;
	}
	width:100%;
	height:auto;
}
@mixin ellipsis {
	@include nowrap(true);
}
@mixin multiline {
	white-space: normal !important;
	text-overflow: clip !important;
	-o-text-overflow: clip !important;
	-ms-text-overflow: clip !important;
	overflow: visible !important;
	word-wrap:normal !important;
}
@mixin no-select() {
	-webkit-touch-callout: none;
	@include css3f(user-select, none);
}
@mixin transform ($value){
	@include css3f(transform, $value);
}
// animation
@mixin transition ($range:all,$sec:0.3s,$timing-function:ease-in-out){
	@include css3f(transition,$range $sec);
	@include css3f(transition-timing-function,$timing-function);
}
@mixin webkit-transition ($range:all,$sec:0.3s,$timing-function:ease-in-out){
	@include css3f(transition,#{-webkit-}$range $sec);
	@include css3f(transition,$range $sec);
	@include css3f(transition-timing-function,$timing-function);
}
@mixin delay ($range:all,$delay:0.3s,$sec:0s){
	@include transition($range,$sec);
	@include css3f(transition-delay,$delay);
}
@mixin opacity($opacity,$imporant:"") {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  //filter: #{alpha(opacity=$opacity-ie)};
}
@mixin relative($x:false,$y:false){
	position:relative;
	@if $x { left:$x; }
	@if $y { top:$y; }
}
@mixin relativeX($x){
	@include relative($x);
}
@mixin relativeY($y){
	@include relative(false,$y);
}
@mixin translate($x,$y){
	@include css3f(transform, translate(#{$x},#{$y}));
}
@mixin translateX($x){
	@include css3f(transform, translateX(#{$x}));
}
@mixin translateY($y){
	@include css3f(transform, translateY(#{$y}));
}
@mixin trick-center($position:absolute) {
	position: $position;
	left: 50%;
	top : 50%;
	@include translate(-50%,-50%);
}
@mixin trick-center-horizontal($position:absolute) {
	position: $position;
	left: 50%;
	@include translateX(-50%);
}
@mixin trick-center-vertical($position:absolute) {
	position: $position;
	top: 50%;
	@include translateY(-50%);
}
@mixin translate3d($x:0,$y:0,$z:0){
	@include css3f(transform, translate3d(#{$x},#{$y},#{$z}));
}
@mixin rotate($rotate:0deg) {
	@include css3f(transform, rotate(#{$rotate}));
    //filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
}
@mixin translate-center($width,$height) {
	position:absolute;
	@include width-height($width,$height);
	left:50%;
	top:50%;
	@include translate(50%,50%);
}

@mixin box-shadow($x-shadow:0px,$y-shadow:0px,$blur:false,$color:#000,$spread:false){
	@if $blur == false { $blur : (($x-shadow + $y-shadow) / 2); }
	@if $spread {
		@include css3f(box-shadow, #{$x-shadow} #{$y-shadow} #{$blur} #{$spread} #{$color});
	} @else {
		@include css3f(box-shadow, #{$x-shadow} #{$y-shadow} #{$blur} #{$color});
	}
	
}
@mixin box-shadow-left($x-shadow:3px, $color:#000){
	@include box-shadow( #{$x-shadow * -1}, 0px, $x-shadow , $color );
}
@mixin box-shadow-right($x-shadow:3px, $color:#000){
	@include box-shadow( #{$x-shadow}, 0px, $x-shadow , $color );
}
@mixin shadow-border($border-width:1px,$color:#000,$direction:false){
	@if $direction == left {
		@include box-shadow(-$border-width,0px,false,$color);
	}
	@if $direction == right {
		@include box-shadow($border-width,0px,false,$color);
	}
	@if $direction == top {
		@include box-shadow(0px,-$border-width,false,$color);
	}
	@if $direction == bottom {
		@include box-shadow(0px,$border-width,false,$color);
	}
	@if $direction == false {
		@include box-shadow(0px,0px,0px,$color,$border-width);
	}	
}
//webkit-filter
@mixin -webkit-filter($value:none) { -webkit-filter: $value;filter: $value; }
// 뿌옅게 0 ~ *
@mixin -webkit-filter-blur($px){ -webkit-filter: blur($px);filter: blur($px); }
//밝기 0 ~ 10
@mixin -webkit-filter-brightness($float){ -webkit-filter: brightness($float);filter: brightness($float); }
//생기 0 ~ 10
@mixin -webkit-filter-saturate($float){	-webkit-filter: saturate($float);filter: saturate($float); }
//음영 0 ~ 1
@mixin -webkit-filter-grayscale($float){ -webkit-filter: grayscale($float);filter: grayscale($float); }
//날카롭게 0 ~ 10
@mixin -webkit-filter-contrast($float){ -webkit-filter: contrast($float);filter: contrast($float); }
//투명도 0 ~ 360
@mixin -webkit-filter-hue-rotate($float){ -webkit-filter: hue-rotate($float);filter: hue-rotate($float); }
//고전적 0 ~ 1
@mixin -webkit-filter-sepia($float){ -webkit-filter: sepia($float);filter: sepia($float); }
//반전 0 ~ 1
@mixin -webkit-filter-invert($float){ -webkit-filter: invert($float);filter: invert($float); }

@mixin clearfix() {
  &:before,
  &:after {
	content: " ";
	visibility: hidden;
	display: block;
	height: 0;
	clear: both !important;
  }
}
@mixin leftfix-column-veriant($left-column-width:false,$left-column-gutter:0px,$left-column:".col-left",$right-column:".col-right") {
	#{$left-column} {
		float:left;
		margin-right:-$left-column-width;
		width: $left-column-width;
	}
	#{$right-column} {
		margin-left:$left-column-width + $left-column-gutter;
		width:auto;
	}
	@include clearfix;
	display:block;
	width:100%;
}

@mixin text-hide() {
    font: #{0/0} a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

@mixin resizable($direction) {
  resize: $direction; // Options: horizontal, vertical, both
  overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
}
// 텍스트 스타일입니다.
@mixin text-flag-veriant(){
	&.primary{ color:$global-primary-color; }
	&.positive{ color:$global-positive-color; }
	&.negative{ color:$global-negative-color; }
}
@mixin border-flag-veriant(){
	&.primary{ border:1px solid $global-primary-color; }
	&.positive{ border:1px solid $global-positive-color; }
	&.negative{ border:1px solid $global-negative-color; }
}
@mixin background-flag-veriant(){
	&.primary { background:$global-primary-color;color:white;  }
	&.positive{ background:$global-positive-color;color:white; }
	&.negative{ background:$global-negative-color;color:white; }
}
// 인풋을 이미지화 시킵니다.
@mixin imaged-input-veriant($image,$width,$height,$checked-image:false){
	@include no-appearance;
	width:$width;
	height:$height;
	background-image:url($image);
	vertical-align:top;
	@if $checked-image != false {
		&:checked {
			background-image:url($checked-image);
		}
	}
}
@mixin show-toggle-veriant($show-class:".show",$display:block){
	@if $display == inline-block {
		&#{$show-class}  { @include inline-block; }
	} @else {
		&#{$show-class}  { display:$display; }
	}
	
}
@mixin input-text-veriant($width:100%,$height:30px,$font-size:12px,$default-padding-width:3px) {
	@include inline-block;
	border:0;
	width:$width;
	height:$height;
	font-size:$font-size;
	line-height:$font-size;
	padding:(($height - $font-size) / 2) $default-padding-width;
	margin:0;
}
//
@mixin button-veriant($width:false,$height:false,$horizontal-padding:5px,$display:inline-block,$ellipsis:true,$vertical-align:middle){
	@include no-select;
	@if $ellipsis == true {
		@include ellipsis;
	}
	
	@if $display {
		@include display($display);
	}
	@if $width  { width:$width; } @else { width:auto; }
	@if $height { height:$height; line-height:$height; }
	
	padding:0 $horizontal-padding;
	cursor:pointer;
	border:0px solid white;
	text-align:center;
	&:hover{ text-decoration:none; };
	&:active{ text-decoration:none; };
	vertical-align:$vertical-align;
}
@mixin image-button-veriant($url,$width,$height,$font-size:0,$horizontal-padding:5px,$display:inline-block,$ellipsis:true,$vertical-align:middle){
	@include button-veriant($width,$height,$horizontal-padding,$display,$ellipsis,$vertical-align);
	background:transparent url("#{$url}") no-repeat;
	background-position:center center;
	font-size:$font-size;
}
@mixin break-veriant($height:10px,$margin:5px,$color:gray,$line-width:1px){
	@include inline-block;
	vertical-align:middle;
	height:20px;
	width:$line-width;
	height:$height;
	margin-left:$margin;
	margin-right:$margin;
	background-color:$color;
}
@mixin figure-veriant($url:false,$figure-width:auto,$figure-height:auto){
	background:url("#{$url}") no-repeat;
	width:100%;
	padding-left:$figure-width;
	min-width :$figure-width;
	height:$figure-height;
}
@mixin icon-veriant($url:false,$icon-width:auto,$icon-height:auto,$line-height:false,$icon-top:center){
	@include inline-block;
	background: url("#{$url}") no-repeat;
	background-position:left $icon-top;
	padding-left:$icon-width;
	min-width:$icon-width;
	min-height:$icon-height;
	@if $line-height == false {
		line-height:$icon-height;
	} @else {
		line-height:$line-height;
	}
}
@mixin image-checkbox-veriant($url,$width,$height) {
	@include no-appearance;
	@include inline-block;
	background-color:transparent;
	background-image:url(#{$url});
	width:$width;
	height:$height;
}
@mixin label-checkbox-container-veriant($url-default,$url-checked,$width,$height,$gap:5px) {
	@include inline-block;
	vertical-align:middle;
	margin:0;
	cursor:pointer;
	input[type=checkbox], input[type=radio] {
		@include no-appearance;
		position: absolute; 
	    overflow: hidden; 
	    clip: rect(0 0 0 0); 
	    height:1px; 
	    width:1px; 
	    margin:-1px; 
	    padding:0;
	    border:0;
	}
	input[type=checkbox], input[type=radio] {
		+ span {
			@include icon-veriant($url-default,$width + $gap,$height);
		}
		&:checked + span {
			@include icon-veriant($url-checked,$width + $gap,$height);
		}
	}
	span {
		@include inline-block;
	}
}
@mixin label-select-container-veriant($url-select-arrow,$width:auto,$height:25px,$border:1px solid silver,$arrow-position:right center) {
	@include inline-block;
	background-image:url($url-select-arrow);
	background-repeat:no-repeat;
	background-position:$arrow-position;
	width:$width;
	height:$height;
	line-height:$height;
	border:$border;
	margin:0;
	vertical-align:middle;
	overflow:hidden;
	select {
		@include no-appearance;
		background:transparent;
		width:$width;
		height:$height;
		line-height:1;
		font-size:inherit;
		border:0;
		border-radius:0;
		padding-left:5px;
	}
}
@mixin inline-group-veriant($height:auto,$vertical-align:baseline,$maring:false){
	& > * {
		@include display(inline-block);
		height:$height;
		vertical-align:$vertical-align;
		@if $maring {
			margin:$maring;
		}
	}
}
@mixin group-veriant($item-selector:"*",$display:false,$item-width:false,$item-height:false){
	& > #{$item-selector} {
		@if $display {
			@include display($display);
		}
		@if $item-width {
			width:$item-width;
		}
		@if $item-height {
			height:$item-height;
		}
	}
}
@mixin list-veriant($list-height:false,$display:false,$list-style:none){
	&{margin:0px;padding:0px;}
	li{
		margin:0px;
		@if $list-height {
			height:$list-height;
			@if $list-style != false {
				line-height:$list-height;
			}
		}
		@if $display == inline-block {
			@include inline-block;
		} @else {
			display:$display;
		}
		@if $list-style {
			list-style:$list-style;
		}
	}
}

// menu나 ul 안에서
@mixin menu-veriant($menu-text-align:center,$menu-item-align:false,$menu-width:false,$menu-height:false,$ellipsis:true) {
	@include no-select;
	@include inline-block;
	text-align:$menu-text-align;
	margin-left:0px;
	margin-top:0px;
	padding:0px;
	margin:0px;
	> a, > a:hover { 
		@if $menu-item-align == block {
			@include block($menu-text-align);
		} @else {
			@include inline-block;
		}
		@include width-height($menu-width,$menu-height);
		@if $menu-height {
			line-height:$menu-height;
			@if $ellipsis { @include ellipsis; }
		}
		text-decoration:none;cursor:pointer; 
		>li { list-style:none; } 
	}
	> li {
		@if $menu-item-align == inline-block {
			@include inline-block;
		} @elseif $menu-item-align == inline {
			@include inline-block;
		} @else {
			@include block($menu-text-align);
		}
		@include width-height($menu-width,$menu-height);
		@if $menu-height {
			line-height:$menu-height;
			@if $ellipsis { @include ellipsis; }
		}
		list-style:none; cursor:pointer; 
		> a, > a:hover{ color:inherit;text-decoration:inherit; }
	}
}
//table cell에 의해 테이블 크기가 결정됩니다.
@mixin cellbase-table-veriant($spacing:0px,$border:false,$table-width:false,$table-layout:auto) {
	display:table;
	@if $table-width { width:$table-width; }
	table-layout:$table-layout;
	@if $spacing > 0px {
		border-spacing:$spacing;
		border-collapse:separate;
	} @else {
		border-spacing:0px;
		border-collapse:collapse;
	}
	@if $border {
		border:$border;
	}
}

//table 크기안에서 셀크기가 결정됩니다.
@mixin table-veriant($spacing:0px,$border:false) {
	@include cellbase-table-veriant($spacing,$border,100%,fixed);
}
//td, th안에서
@mixin table-cell-veriant ($vertical:middle,$align:left,$height:false,$padding:false,$hBorder:false,$vBorder:false,$hBorderTop:false,$hBorderBottom:false){
	@if $vertical{ vertical-align:$vertical } @else {vertical-align:middle;}
	@if $align   { text-align:$align; } @else {text-align:left;}
	@if $height  { height: $height;min-height: $height; }
	@if $padding { padding:$padding; }
	@if $hBorder { 
		border-top:$hBorder;
		border-bottom:$hBorder;
	}
	@if $vBorder { 
		border-left:$vBorder;
		border-right:$vBorder;
	}
	
}
//thead tbody tfoot 안에서
@mixin table-body-veriant($vertical:false,$align:false,$height:false,$padding:false,$hBorder:false,$vBorder:false,$hBorderTop:false,$hBorderBottom:false){
	td,th{
		@include table-cell-veriant($vertical,$align,$height,$padding,$hBorder,$vBorder,$hBorderTop,$hBorderBottom);
	}
}
//column시스템
@mixin column-grid-veriant($grid:2,$row:"*",$column:"*",$padding:0px) {
	margin: 0 auto;
	max-width: 100%;
	
	> #{$row} {
		@include heightfix;
		display:block !important;
		
		> #{$column} {
			float:left;
			width:50%;
			padding-right:$padding;
			
			&:nth-child(#{$grid - 1}n+1) {
				padding-right:0;
			}
		}
		
	}
}
@mixin column-width-veriant($column-name:false,$column-width:50%,$row:"*",$column:"*") {
	> #{$row} > #{$column} { 
		width:$column-width;
	}
}
// Single side border-radius
@mixin border-radius-top($radius) {
  border-top-right-radius: $radius;
   border-top-left-radius: $radius;
}
@mixin border-radius-right($radius) {
  border-bottom-right-radius: $radius;
     border-top-right-radius: $radius;
}
@mixin border-radius-bottom($radius) {
  border-bottom-right-radius: $radius;
   border-bottom-left-radius: $radius;
}
@mixin border-radius-left($radius) {
  border-bottom-left-radius: $radius;
     border-top-left-radius: $radius;
}

// layout set
@mixin baseline-veriant($group-height:30px,$child-tag:'>*'){
	display:table;
    width: 100%;
	border-collapse: separate;
    table-layout: fixed;
	height:$group-height;
	#{$child-tag} {
		@include no-select;
		position:relative;
		float:none;
		display:table-cell;
		width:100%;
		height:$group-height;
		line-height:$group-height;
	}
}

@mixin layout-veriant($container-name:false) {
	position:relative;
	width:100%;
	@include heightfix;
	
	@if $container-name == false {
		$container-name:#{&};
	} @else {
		$container-name:"." + $container-name;
	}
	#{$container-name}-center { 
		@include inline-block;margin-left:auto !important;margin-right:auto !important;text-align:center; 
		>* { vertical-align:middle; }
	}
	#{$container-name}-left   {
		@include inline-block;
		float:left;
		>* { vertical-align:middle; }
	}
	#{$container-name}-right { 
		@include inline-block;
		float:right;
		position:relative;
		>* { vertical-align:middle; }
	}
}

//layout은 컨텐츠 높이에 반응하지만 list-cell은 정의된 높이에서만 동작한다.
@mixin cell-layout-veriant($container-name:false,$height:false,$cell-side-padding:0px,$cell-top-offset:0px){
	position:relative;
	width:100%;
	
	@if $height {
		height:$height;
		line-height:$height;
	}
	
	@if $container-name == false {
		$container-name:#{&};
	} @else {
		$container-name:"." + $container-name;
	}
	
	#{$container-name}-left   {
		position:absolute;
		top:$cell-top-offset;
		left:$cell-side-padding;
		height:$height;
	}
	#{$container-name}-right { 
		position:absolute;
		top:$cell-top-offset;
		right:$cell-side-padding;
		height:$height;
	}
}

@mixin asset($uri,$width:auto,$height:auto,$font-size:0){
	font-size:$font-size;
	background: url("#{$uri}") no-repeat;
	width : ($width * 1px) ;
	height: ($height * 1px);
}

@mixin panelPart($model,$headname,$partHeight){
	.#{$model}-#{$headname} {
		* { margin-bottom:0; }
		position:relative;
		@if $partHeight { 
			height:#{$partHeight};line-height:#{$partHeight};
		}
		.#{$model}-#{$headname}-title,.#{$model}-#{$headname}-left{
			
			@if $partHeight {
				position:absolute;
				left:0;
				top:0;
				height:#{$partHeight};
				line-height:#{$partHeight};
			} @else {
				float:left;
			}
			
		}
		.#{$model}-#{$headname}-commands,.#{$model}-#{$headname}-right{
			@include no-select;
			@if $partHeight { 
				position:absolute;
				right:0;
				top:0;
				height:#{$partHeight};
				line-height:#{$partHeight};
			} @else {
				float:right;
			}
			>*  { @include inline-block; position:relative; }
			p   { cursor:default; margin:0; }
			li,a{ cursor:pointer; text-decoration:none; }
		}
		
	}
}
@mixin panel-veriant($model,$headHeight:false,$footHeight:false) {
	position:relative;
	padding:0;
	@each $headname in 'header','heading' { @include panelPart($model,$headname,$headHeight); }
	@each $footname in 'foot','footer'    { @include panelPart($model,$footname,$footHeight); }
	.#{$model}-body { position:relative; }
	
}


